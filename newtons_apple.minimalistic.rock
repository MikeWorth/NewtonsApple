bounciness is 0.624 (a value chosen for poetic reasons...)
gravity is 9.81
x is 120
y is 121
zero is 0
timestep is 0.001

calculateenergy takes height and velocitya and velocityb
    half is 0.5
    let gravitational be height times gravity
    let kinetic be half times velocitya times velocitya plus half times velocityb times velocityb 
    return gravitational plus kinetic

endtime is 2
onethousand is 1000

minusone is nothing
knock minusone down
zero is 0

bounce takes velocity
    if velocity is lower than zero
        let velocity be times minusone

    let finalvelocity be bounciness times velocity
    return finalvelocity

cast x
cast y
rock columntitles with "time"
rock columntitles with x (this time round it's literally the string 'x')
rock columntitles with y (this time round it's literally the string 'y')

comma is 44
cast comma
join columntitles with comma

time is 0
x is 0
say "Enter height"
listen to y
say "Enter horizontal velocity"
listen to velx
vely is 0
cast velx
cast y
let startingenergy be calculateenergy taking y , velx , vely

let columntitles be columntitles
say columntitles

while zero aint minusone
    let energy be calculateenergy taking y,velx,vely
    rock outputline
    let outputline at zero be time
    rock outputline with x
    rock outputline with y
    join outputline with comma
    let outputline be outputline
    shout it
    outputline is empty
    let thistimestep be timestep
    if thistimestep times vely times minusone is greater than y
        let thistimestep be y over vely
        let velx be bounce taking velx
        let vely be bounce taking vely
    
    let time be plus thistimestep
    let x be plus thistimestep times velx
    let y be plus thistimestep times vely
    put thistimestep times gravity into deltavel
    let vely be plus deltavel times minusone
    if startingenergy is greater than energy times onethousand
        break

    if time is as high as endtime
        break



