minusone is nothing
knock minusone down
gravity is 9.81
let gravity be times minusone
bounciness is 0.5
timestep is 0.001
endtime is 2
comma is 44
cast comma

calculateenergy takes height and velocitya and velocityb
    let gravitational be gravity times height times -1
    half is 0.5
    let kinetic be half times velocitya times velocitya plus half times velocityb times velocityb 
    return gravitational plus kinetic

bounce takes velocity
    if velocity is lower than 0
        let velocity be times minusone

    return velocity times bounciness

say "Enter height"
x is 0
listen to y
cast y
say "Enter horizontal velocity"
listen to velx
cast velx
vely is 0
let startingenergy be calculateenergy taking y , velx , vely
time is 0

xstring is 120
burn xstring
ystring is 121
burn ystring

rock columntitles with "time"
rock columntitles with xstring
rock columntitles with ystring
join columntitles with comma
say columntitles

while true
    let energy be calculateenergy taking y,velx,vely
    rock outputline
    let outputline at 0 be time
    rock outputline with x
    rock outputline with y
    join outputline with comma
    say outputline
    outputline is empty
    if y is lower than timestep times vely times minusone
        let thistimestep be y over vely
        let velx be bounce taking velx
        let vely be bounce taking vely
    
    if y is as high as timestep times vely times minusone (should be an else, but interpretor doesnt handle blocks properly)
        let thistimestep be timestep

    let time be plus thistimestep
    let x be plus thistimestep times velx
    let y be plus thistimestep times vely
    let vely be plus thistimestep times gravity
    if energy is lower than startingenergy over 1000
        break

    if time is as high as endtime
        break



